{"ast":null,"code":"var _jsxFileName = \"/Users/musyaffaq/Documents/GitHub/hangman-tiktok-project/src/components/Hangman.js\";\nimport React from \"react\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Blanks = props => {\n  console.log(sessionStorage.getItem(\"word\"));\n  var word = sessionStorage.getItem(\"word\");\n  var string = \"\";\n\n  if (word !== null) {\n    var category_str = \"The category you have chosen is \" + sessionStorage.getItem(\"category\") + \". Guess the word!\";\n    string = word.split(\"\").map(letter => props.right.has(letter) ? letter : \" _ \");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-center mb-5\",\n      children: category_str\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Hangman-word mt-5\",\n      children: [\" \", string, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Blanks;\nexport default Blanks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blanks\");","map":{"version":3,"names":["React","Blanks","props","console","log","sessionStorage","getItem","word","string","category_str","split","map","letter","right","has"],"sources":["/Users/musyaffaq/Documents/GitHub/hangman-tiktok-project/src/components/Hangman.js"],"sourcesContent":["import React from \"react\";\nimport \"../App.css\";\n\nconst Blanks = (props) => {\n    console.log(sessionStorage.getItem(\"word\"));\n    var word = sessionStorage.getItem(\"word\");\n\n    var string = \"\";\n\n    if (word !== null) {\n        var category_str =\n            \"The category you have chosen is \" +\n            sessionStorage.getItem(\"category\") +\n            \". Guess the word!\";\n        string = word\n            .split(\"\")\n            .map((letter) => (props.right.has(letter) ? letter : \" _ \"));\n    }\n\n    return (\n        <div>\n            <h4 className=\"text-center mb-5\">{category_str}</h4>\n            <h1 className=\"Hangman-word mt-5\"> {string} </h1>\n        </div>\n    );\n};\n\nexport default Blanks;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;EACtBC,OAAO,CAACC,GAAR,CAAYC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAZ;EACA,IAAIC,IAAI,GAAGF,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAX;EAEA,IAAIE,MAAM,GAAG,EAAb;;EAEA,IAAID,IAAI,KAAK,IAAb,EAAmB;IACf,IAAIE,YAAY,GACZ,qCACAJ,cAAc,CAACC,OAAf,CAAuB,UAAvB,CADA,GAEA,mBAHJ;IAIAE,MAAM,GAAGD,IAAI,CACRG,KADI,CACE,EADF,EAEJC,GAFI,CAECC,MAAD,IAAaV,KAAK,CAACW,KAAN,CAAYC,GAAZ,CAAgBF,MAAhB,IAA0BA,MAA1B,GAAmC,KAFhD,CAAT;EAGH;;EAED,oBACI;IAAA,wBACI;MAAI,SAAS,EAAC,kBAAd;MAAA,UAAkCH;IAAlC;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAI,SAAS,EAAC,mBAAd;MAAA,gBAAoCD,MAApC;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CAtBD;;KAAMP,M;AAwBN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}