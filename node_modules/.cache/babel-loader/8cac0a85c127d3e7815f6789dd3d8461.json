{"ast":null,"code":"var _jsxFileName = \"/Users/musyaffaq/Documents/GitHub/hangman-tiktok-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { React, useState } from \"react\";\nimport Buttons from \"./components/Buttons\";\nimport ModalCategory from \"./components/CategoriesInModal\";\nimport Blanks from \"./components/Hangman\"; // images\n\nimport body1 from \"./body/body-1.png\";\nimport body0 from \"./body/body-0.png\";\nimport body2 from \"./body/body-2.png\";\nimport body3 from \"./body/body-3.png\";\nimport body4 from \"./body/body-4.png\";\nimport body5 from \"./body/body-5.png\";\nimport body6 from \"./body/body-6.png\";\nimport lossGif from \"./gifs/loss.gif\";\nimport winGif from \"./gifs/win.gif\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mistake, setMistake] = useState(0);\n  const [right, setRight] = useState(new Set());\n  const [wrong, setWrong] = useState(new Set());\n  const maxWrong = 6;\n  let answer = \"\";\n  const ans_letters = new Set();\n\n  if (sessionStorage.getItem(\"word\")) {\n    answer = sessionStorage.getItem(\"word\");\n    answer.split(\"\").forEach(letter => {\n      ans_letters.add(letter);\n    });\n    console.log(ans_letters);\n  }\n\n  ; // body images\n\n  const body = [body0, body1, body2, body3, body4, body5, body6]; // to reset the gamesWon and gamesPlayed\n  // localStorage.gamesWon = 0;\n  // localStorage.gamesPlayed = 0;\n  // store the gamesWon and gamesPlayed\n\n  if (localStorage.gamesWon) {} else {\n    localStorage.gamesWon = 0;\n  }\n\n  ;\n\n  if (localStorage.gamesPlayed) {} else {\n    localStorage.gamesPlayed = 0;\n  }\n\n  ; // increase gamesWon and gamesPlayed accordingly\n\n  if (ans_letters.size !== 0 && right.size >= ans_letters.size) {\n    localStorage.gamesPlayed = parseInt(localStorage.gamesPlayed) + 1;\n    localStorage.gamesWon = parseInt(localStorage.gamesWon) + 1;\n  } else if (mistake >= maxWrong) {\n    localStorage.gamesPlayed = parseInt(localStorage.gamesPlayed) + 1;\n  }\n\n  ; // if user guesses a letter correctly (clicks a button), letter is added into {right} prop\n  // else, letter is added into {wrong} prop\n  // {mistake} is the count of the number of wrong guesses the user has made. It will increase by 1 whenever the user makes a wrong guess.\n  // whoever is making the win/lose functionality can make use of the {mistake} prop\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#90ee90\",\n        padding: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hangman Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ModalCategory, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: body[mistake]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Blanks, {\n        right: right\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), ans_letters.size !== 0 && right.size >= ans_letters.size ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"You Win! Good job \\uD83D\\uDC4F\\uD83C\\uDFFB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: winGif\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Games Played: \", localStorage.gamesPlayed]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Win Percentage: \", localStorage.gamesPlayed !== '0' ? Math.round(localStorage.gamesWon / localStorage.gamesPlayed * 100) : 0, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this) : mistake >= maxWrong ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Aww, you can do better! \\uD83D\\uDCAA\\uD83C\\uDFFB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: lossGif\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Games Played: \", localStorage.gamesPlayed]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Win Percentage: \", localStorage.gamesPlayed !== '0' ? Math.round(localStorage.gamesWon / localStorage.gamesPlayed * 100) : 0, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this) : answer !== \"\" ? /*#__PURE__*/_jsxDEV(Buttons, {\n        right: right,\n        updateRight: setRight,\n        wrong: wrong,\n        updateWrong: setWrong,\n        mistake: mistake,\n        updateMistake: setMistake\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"kMoPpSpUFPOFzQ351VVIMgGhN7I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Buttons","ModalCategory","Blanks","body1","body0","body2","body3","body4","body5","body6","lossGif","winGif","App","mistake","setMistake","right","setRight","Set","wrong","setWrong","maxWrong","answer","ans_letters","sessionStorage","getItem","split","forEach","letter","add","console","log","body","localStorage","gamesWon","gamesPlayed","size","parseInt","backgroundColor","padding","Math","round"],"sources":["/Users/musyaffaq/Documents/GitHub/hangman-tiktok-project/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { React, useState } from \"react\";\nimport Buttons from \"./components/Buttons\";\nimport ModalCategory from \"./components/CategoriesInModal\";\nimport Blanks from \"./components/Hangman\";\n\n// images\nimport body1 from \"./body/body-1.png\";\nimport body0 from \"./body/body-0.png\";\nimport body2 from \"./body/body-2.png\";\nimport body3 from \"./body/body-3.png\";\nimport body4 from \"./body/body-4.png\";\nimport body5 from \"./body/body-5.png\";\nimport body6 from \"./body/body-6.png\";\nimport lossGif from \"./gifs/loss.gif\"\nimport winGif from \"./gifs/win.gif\"\n\nfunction App() {\n    const [mistake, setMistake] = useState(0);\n    const [right, setRight] = useState(new Set());\n    const [wrong, setWrong] = useState(new Set());\n\n    const maxWrong = 6;\n\n    let answer = \"\";\n    const ans_letters = new Set();\n\n    if (sessionStorage.getItem(\"word\")) {\n        answer = sessionStorage.getItem(\"word\");\n        answer.split(\"\").forEach((letter) => {\n            ans_letters.add(letter);\n        });\n        console.log(ans_letters);\n    };\n\n    // body images\n    const body = [body0, body1, body2, body3, body4, body5, body6]\n\n    // to reset the gamesWon and gamesPlayed\n    // localStorage.gamesWon = 0;\n    // localStorage.gamesPlayed = 0;\n\n    // store the gamesWon and gamesPlayed\n    if (localStorage.gamesWon) {\n    } else {\n        localStorage.gamesWon = 0;\n    };\n\n    if (localStorage.gamesPlayed) {\n    } else {\n        localStorage.gamesPlayed = 0;\n    };\n\n    // increase gamesWon and gamesPlayed accordingly\n    if (ans_letters.size !== 0 && right.size >= ans_letters.size) {\n        localStorage.gamesPlayed = parseInt(localStorage.gamesPlayed) + 1;\n        localStorage.gamesWon = parseInt(localStorage.gamesWon) + 1;\n    } else if (mistake >= maxWrong) {\n        localStorage.gamesPlayed = parseInt(localStorage.gamesPlayed) + 1;\n    };\n\n    // if user guesses a letter correctly (clicks a button), letter is added into {right} prop\n    // else, letter is added into {wrong} prop\n    // {mistake} is the count of the number of wrong guesses the user has made. It will increase by 1 whenever the user makes a wrong guess.\n    // whoever is making the win/lose functionality can make use of the {mistake} prop\n\n    return (\n        <div className=\"App\">\n            <div style={{ backgroundColor: \"#90ee90\", padding: \"10px\" }}>\n                <h1>Hangman Game</h1>\n            </div>\n            <div className=\"gameBody\">\n            <br></br>\n            <ModalCategory></ModalCategory>\n            <img src={body[mistake]}></img>\n            <Blanks right={right}></Blanks>\n            <br></br>\n            <br></br>\n            {ans_letters.size !== 0 && right.size >= ans_letters.size ? (\n                <div>\n                    <h1>You Win! Good job 👏🏻</h1>\n                    <img src={winGif}></img>\n                    <h2>Games Played: {localStorage.gamesPlayed}</h2>\n                    <h2>Win Percentage: {localStorage.gamesPlayed !== '0' ? Math.round((localStorage.gamesWon)/localStorage.gamesPlayed*100) : 0}%</h2>\n                </div>\n            ) : mistake >= maxWrong ? (\n                <div>\n                    <h1>Aww, you can do better! 💪🏻</h1>\n                    <img src={lossGif}></img>\n                    <h2>Games Played: {localStorage.gamesPlayed}</h2>\n                    <h2>Win Percentage: {localStorage.gamesPlayed !== '0' ? Math.round((localStorage.gamesWon)/localStorage.gamesPlayed*100) : 0}%</h2>\n                </div>\n            ) : answer !== \"\" ? (\n                <Buttons\n                    right={right}\n                    updateRight={setRight}\n                    wrong={wrong}\n                    updateWrong={setWrong}\n                    mistake={mistake}\n                    updateMistake={setMistake}\n                />\n            ) : (\n                <p></p>\n            )}\n            {/* add reset */}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}