{"ast":null,"code":"var _jsxFileName = \"/Users/musyaffaq/Documents/GitHub/hangman-tiktok-project/hangman-game/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { React, useEffect, useState } from \"react\";\nimport Buttons from \"./components/Buttons\";\nimport ModalCategory from \"./components/CategoriesInModal\";\nimport Blanks from \"./components/Hangman\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mistake, setMistake] = useState(0);\n  const [right, setRight] = useState(new Set());\n  const [wrong, setWrong] = useState(new Set());\n  const maxWrong = 6;\n  let answer = \"\";\n  const ans_letters = new Set();\n\n  if (sessionStorage.getItem(\"word\")) {\n    answer = sessionStorage.getItem(\"word\");\n    answer.split(\"\").forEach(letter => {\n      ans_letters.add(letter);\n    });\n    console.log(ans_letters);\n  }\n\n  ; // let gamesPlayed = 0;\n  // let gamesWon = 0;\n\n  localStorage.setItem(\"gamesWon\", 0);\n  localStorage.setItem(\"gamesPlayed\", 0);\n  useEffect(() => {\n    if (ans_letters.size !== 0 && right.size >= ans_letters.size) {\n      setGamesWon(gamesWon + 1);\n      setGamesPlayed(gamesPlayed + 1);\n    } else if (mistake >= maxWrong) {\n      setGamesPlayed(gamesPlayed + 1);\n    }\n  }, []); // if (ans_letters.size !== 0 && right.size >= ans_letters.size) {\n  //     useEffect(() => {\n  //         setGamesPlayed(gamesPlayed + 1);\n  //     }, []);\n  //     useEffect(() => {\n  //         setGamesWon(gamesWon + 1);\n  //     }, []);\n  // } else if (mistake >= maxWrong) {\n  //     useEffect(() => {\n  //         setGamesPlayed(gamesPlayed + 1);\n  //     }, []);\n  // };\n  // if user guesses a letter correctly (clicks a button), letter is added into {right} prop\n  // else, letter is added into {wrong} prop\n  // {mistake} is the count of the number of wrong guesses the user has made. It will increase by 1 whenever the user makes a wrong guess.\n  // whoever is making the win/lose functionality can make use of the {mistake} prop\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#90ee90\",\n        padding: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hangman Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Games Played: \", gamesPlayed]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Win Percentage: \", gamesPlayed !== 0 ? gamesWon / gamesPlayed * 100 : 0, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalCategory, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Blanks, {\n      right: right\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), ans_letters.size !== 0 && right.size >= ans_letters.size ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"You Win!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this) : mistake >= maxWrong ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"You Lose!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this) : answer != \"\" ? /*#__PURE__*/_jsxDEV(Buttons, {\n      right: right,\n      updateRight: setRight,\n      wrong: wrong,\n      updateWrong: setWrong,\n      mistake: mistake,\n      updateMistake: setMistake\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"ce+fQfTQyw48/emLMS59TVgCVsQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Buttons","ModalCategory","Blanks","App","mistake","setMistake","right","setRight","Set","wrong","setWrong","maxWrong","answer","ans_letters","sessionStorage","getItem","split","forEach","letter","add","console","log","localStorage","setItem","size","setGamesWon","gamesWon","setGamesPlayed","gamesPlayed","backgroundColor","padding"],"sources":["/Users/musyaffaq/Documents/GitHub/hangman-tiktok-project/hangman-game/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { React, useEffect, useState } from \"react\";\nimport Buttons from \"./components/Buttons\";\nimport ModalCategory from \"./components/CategoriesInModal\";\nimport Blanks from \"./components/Hangman\";\n\nfunction App() {\n    const [mistake, setMistake] = useState(0);\n    const [right, setRight] = useState(new Set());\n    const [wrong, setWrong] = useState(new Set());\n\n    const maxWrong = 6;\n\n    let answer = \"\";\n    const ans_letters = new Set();\n\n    if (sessionStorage.getItem(\"word\")) {\n        answer = sessionStorage.getItem(\"word\");\n        answer.split(\"\").forEach((letter) => {\n            ans_letters.add(letter);\n        });\n        console.log(ans_letters);\n    };\n\n    // let gamesPlayed = 0;\n    // let gamesWon = 0;\n\n    localStorage.setItem(\"gamesWon\", 0);\n    localStorage.setItem(\"gamesPlayed\", 0);\n\n    useEffect(() => {\n        if (ans_letters.size !== 0 && right.size >= ans_letters.size) {\n            setGamesWon(gamesWon + 1);\n            setGamesPlayed(gamesPlayed + 1);\n        } else if (mistake >= maxWrong) {\n            setGamesPlayed(gamesPlayed + 1);\n        }\n        \n    }, []);    \n\n\n    // if (ans_letters.size !== 0 && right.size >= ans_letters.size) {\n    //     useEffect(() => {\n    //         setGamesPlayed(gamesPlayed + 1);\n    //     }, []);\n    //     useEffect(() => {\n    //         setGamesWon(gamesWon + 1);\n    //     }, []);\n    // } else if (mistake >= maxWrong) {\n    //     useEffect(() => {\n    //         setGamesPlayed(gamesPlayed + 1);\n    //     }, []);\n    // };\n\n    // if user guesses a letter correctly (clicks a button), letter is added into {right} prop\n    // else, letter is added into {wrong} prop\n    // {mistake} is the count of the number of wrong guesses the user has made. It will increase by 1 whenever the user makes a wrong guess.\n    // whoever is making the win/lose functionality can make use of the {mistake} prop\n\n    return (\n        <div className=\"App\">\n            <div style={{ backgroundColor: \"#90ee90\", padding: \"10px\" }}>\n                <h1>Hangman Game</h1>\n            </div>\n            <br></br>\n            <div>\n                <h2>Games Played: {gamesPlayed}</h2>\n                <h2>Win Percentage: {gamesPlayed !== 0 ? gamesWon/gamesPlayed*100: 0}%</h2>\n            </div>\n            <br></br>\n            <ModalCategory></ModalCategory>\n            <br></br>\n            <br></br>\n            {/* add hangman */}\n            <Blanks right={right}></Blanks>\n            <br></br>\n            <br></br>\n            {ans_letters.size !== 0 && right.size >= ans_letters.size ? (\n                <h1>You Win!</h1>\n            ) : mistake >= maxWrong ? (\n                <h1>You Lose!</h1>\n            ) : answer != \"\" ? (\n                <Buttons\n                    right={right}\n                    updateRight={setRight}\n                    wrong={wrong}\n                    updateWrong={setWrong}\n                    mistake={mistake}\n                    updateMistake={setMistake}\n                />\n            ) : (\n                <p></p>\n            )}\n            {/* add reset */}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}